package com.example.jdktest.jvm;

/**
 * 现代jvm在执行java代码的时候，通常会见解释执行与编译执行二者结合起来进行。
 *      1. 解释执行：通过解释器来读取字节码，遇到相应的指令就会去执行该指令
 *      2. 编译执行：就是通过即时编译器（Just In Time，JIT）将字节码转换为本地机器码来执行；现代jvm会根据代码热点来生成相应的本地机器码。
 * 基于栈的指令集与基于寄存器的指令集之间的关系：
 *      1. jvm执行指令时所采取的方式是基于栈的指令集。
 *      2. 基于栈的指令集主要的操作有出栈与入栈两种。
 *      3. 基于栈的指令集的优势是它可以在不同平台之间移植，而基于寄存器的指令集是与硬件架构紧密关联的，无法做到可移植。
 *      4. 基于栈的指令集的缺点在于完成相同的操作，指令数量通常要比基于寄存器对的指令集数量要多；基于站的指令集是在内存中完成操作的，而基于寄存器的指令集是直接由cup来执行的，
 *          它是在高速缓冲区中进行执行的，速度要快很多。虽然虚拟机可以采用一些优化手段，但总体来说，基于栈的指令集的执行速度要慢一些。
 */
public class ByteCodesTest6 {
}
